
- name: Copy docker-compose files to remote host
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/opt/{{ item }}"
  loop: "{{ stack_file_names }}"

- name: Undeploy stack
  community.docker.docker_stack:
    state: absent
    name: vcc
    detach: false
  when: stack_recreate

- name: Install rsync
  ansible.builtin.apt:
    name:
      - rsync

- name: Delete directories in /data
  ansible.builtin.file:
    path: "/data/{{ item }}"
    state: absent
  loop: "{{ stack_data_directories }}"
  when: stack_nuke_data_directories

- name: Create directories in /data
  ansible.builtin.file:
    path: "/data/{{ item }}"
    state: directory
  loop: "{{ stack_data_directories }}"

- name: Create /data/configs
  ansible.builtin.file:
    path: /data/configs
    state: directory

- name: Copy configs
  ansible.posix.synchronize:
    src: "{{ role_path }}/files/configs/"
    dest: "/data/configs/"
    archive: true
    delete: true

- name: Create directories in /data
  ansible.builtin.file:
    path: "/data/{{ item }}"
    state: directory
  loop: "{{ stack_data_directories }}"

- name: Ensure /data/configs/traefik directory exists
  ansible.builtin.file:
    path: /data/configs/traefik
    state: directory


- name: Copy default traefik dynamic config
  ansible.builtin.copy:
    src: traefik-grafana-dynamic.yml
    dest: /data/configs/traefik/traefik-grafana-dynamic.yml
  when: inventory_hostname == ansible_play_hosts_all[0]


- name: Create grafana data directory with proper ownership
  ansible.builtin.file:
    path: /data/grafana
    state: directory
    owner: 472
    group: 472

- name: Copy wait-for-postgres.sh
  copy:
    src: configs/forgejo/wait-for-postgres.sh
    dest: /data/forgejo/wait-for-postgres.sh
    mode: '0755'



- name: Deploy stack from a compose file
  community.docker.docker_stack:
    state: present
    name: vcc
    prune: true
    detach: false
    with_registry_auth: true
    compose: "{{ ['/opt/'] | product(stack_file_names) | map('join') | list }}"
  retries: 3
  delay: 1
  register: result
  until: result is not failed
